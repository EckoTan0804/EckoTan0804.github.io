<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coding | Haobin Tan</title>
    <link>https://eckotan0804.github.io/category/coding/</link>
      <atom:link href="https://eckotan0804.github.io/category/coding/index.xml" rel="self" type="application/rss+xml" />
    <description>Coding</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2020</copyright><lastBuildDate>Mon, 06 Jul 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://eckotan0804.github.io/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Coding</title>
      <link>https://eckotan0804.github.io/category/coding/</link>
    </image>
    
    <item>
      <title>args and kwargs</title>
      <link>https://eckotan0804.github.io/notes/python/py-basics/args_and_kwargs/</link>
      <pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://eckotan0804.github.io/notes/python/py-basics/args_and_kwargs/</guid>
      <description>&lt;h2 id=&#34;passing-multiple-arguments-to-a-function&#34;&gt;Passing multiple arguments to a function&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;*args&lt;/code&gt; and &lt;code&gt;**kwargs&lt;/code&gt; allow you to pass multiple arguments or keyword arguments to a function.&lt;/p&gt;
&lt;p&gt;For example, we neede to take a &lt;strong&gt;various&lt;/strong&gt; numbers of arguments and compute their sum.&lt;/p&gt;
&lt;p&gt;The first way is often the most intuitive for people that have experience with collections: simply pass a &lt;code&gt;list&lt;/code&gt; or a &lt;code&gt;set&lt;/code&gt; of all the arguments to your function.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def my_sum(my_integers):
    result = 0
    for x in my_integers:
        result += x
    return result

list_of_integers = [1, 2, 3]
my_sum(list_of_integers)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;6
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This implementation works, but whenever you call this function you’ll also need to create a list of arguments to pass to it. This can be inconvenient, especially if you don’t know up front all the values that should go into the list. 🤪&lt;/p&gt;
&lt;p&gt;This is where &lt;code&gt;*args&lt;/code&gt; can be really useful, because it allows you to pass a varying number of positional arguments.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def my_sum(*args):
    result = 0
    # Iterating over the python `args` tuple
    for x in args:
        result += x
    return result

# *args = 1, 2, 3
# -&amp;gt; args = (1, 2, 3)
my_sum(1, 2, 3)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;6
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def print_args(*args):
    print(args)
    
print_args(1, 2, 3)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;(1, 2, 3)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, we’re no longer passing a list to &lt;code&gt;my_sum()&lt;/code&gt;. Instead, we’re passing three different positional arguments. &lt;strong&gt;&lt;code&gt;my_sum()&lt;/code&gt; takes all the parameters that are provided in the input and packs them all into a single iterable object named &lt;code&gt;args&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The magic is that we use the &lt;strong&gt;unpacking operator&lt;/strong&gt; (&lt;code&gt;*&lt;/code&gt;).  The iterable object you’ll get using the unpacking operator &lt;code&gt;*&lt;/code&gt; is not a &lt;code&gt;list&lt;/code&gt; but a &lt;code&gt;tuple&lt;/code&gt;, which is NOT mutable.&lt;/p&gt;
&lt;h2 id=&#34;using-the-python-kwargs-variable-in-function-definitions&#34;&gt;Using the Python kwargs Variable in Function Definitions&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;**kwargs&lt;/code&gt; works just like &lt;code&gt;*args&lt;/code&gt;, but instead of accepting positional arguments it accepts keyword (or &lt;strong&gt;named&lt;/strong&gt;) arguments.&lt;/p&gt;
&lt;p&gt;E.g.:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def concatenate(**kwargs):
    result = &amp;quot;&amp;quot;
    # Iterating over the Python kwargs dictionary
    for arg in kwargs.values():
        result += arg
    return result

print(concatenate(a=&amp;quot;Real&amp;quot;, b=&amp;quot;Python&amp;quot;, 
                  c=&amp;quot;Is&amp;quot;, d=&amp;quot;Great&amp;quot;, e=&amp;quot;!&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;RealPythonIsGreat!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Like &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;kwargs&lt;/code&gt; is just a name that can be changed to whatever you want. Again, what is important here is the use of the &lt;strong&gt;unpacking operator&lt;/strong&gt; (&lt;code&gt;**&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Note:  If we 
&lt;a href=&#34;https://realpython.com/iterate-through-dictionary-python/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;iterate over the dictionary&lt;/a&gt; and want to return its &lt;strong&gt;values&lt;/strong&gt;, we must use &lt;code&gt;.values()&lt;/code&gt;. Otherwise it will iterates over the &lt;strong&gt;keys&lt;/strong&gt; of the kwargs dictionary.&lt;/p&gt;
&lt;h2 id=&#34;ordering-arguments-in-a-function&#34;&gt;Ordering Arguments in a Function&lt;/h2&gt;
&lt;p&gt;The correct order for parameters is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Standard arguments&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*args&lt;/code&gt; arguments&lt;/li&gt;
&lt;li&gt;&lt;code&gt;**kwargs&lt;/code&gt; arguments&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;E.g.:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# correct
def my_function(a, b, *args, **kwargs):
    pass
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;unpacking-with-the-asterisk-operators---&#34;&gt;Unpacking With the Asterisk Operators: * &amp;amp; **&lt;/h2&gt;
&lt;p&gt;In short, the unpacking operators are operators that unpack the values from iterable objects in Python. The single asterisk operator &lt;code&gt;*&lt;/code&gt; can be used on any iterable that Python provides, while the double asterisk operator &lt;code&gt;**&lt;/code&gt; can only be used on dictionaries.&lt;/p&gt;
&lt;h3 id=&#34;heading&#34;&gt;&lt;code&gt;*&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;*&lt;/code&gt; operator works on any iterable object.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;my_list = [1, 2, 3]
print(my_list)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1, 2, 3]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;THe list is printed, &lt;strong&gt;along with the corresponding brackets and commas&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Now try to prepend the unpacking operator &lt;code&gt;*&lt;/code&gt; to the name of the list:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(*my_list)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;1 2 3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here, the * operator tells print() to unpack the list first.&lt;/p&gt;
&lt;p&gt;In this case, the output is no longer the list itself, but rather the content of the list. The difference is: Instead of a list, &lt;code&gt;print()&lt;/code&gt; has taken three separate arguments as the input.&lt;/p&gt;
&lt;p&gt;Another thing should be noticed is that we used the unpacking operator &lt;code&gt;*&lt;/code&gt; to call a function, instead of in a function definition. In this case, &lt;code&gt;print()&lt;/code&gt; takes all the items of a list as though they were single arguments.&lt;/p&gt;
&lt;h4 id=&#34;other-convenient-uses-of-the-unpacking-operator&#34;&gt;Other convenient uses of the unpacking operator&lt;/h4&gt;
&lt;h5 id=&#34;eg-1&#34;&gt;E.g. 1&lt;/h5&gt;
&lt;p&gt;Split a list into three different parts: The output should show the first value, the last value, and all the values in between.&lt;/p&gt;
&lt;p&gt;With the unpacking operator, we can do this in just one line of code:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;my_list = [1, 2, 3, 4, 5, 6]

a, *b, c = my_list

print(a)
print(b)
print(c)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;1
[2, 3, 4, 5]
6
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;eg-2&#34;&gt;E.g. 2&lt;/h5&gt;
&lt;p&gt;Merge two lists:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;list_1 = [1, 2, 3]
list_2 = [4, 5, 6]

merged_list = [*list_1, *list_2]
merged_list
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1, 2, 3, 4, 5, 6]
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;for-strings&#34;&gt;For strings&lt;/h4&gt;
&lt;p&gt;In Python, strings are iterable objects. So the &lt;code&gt;*&lt;/code&gt; operators can also be used to unpack a string.&lt;/p&gt;
&lt;p&gt;E.g.:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;a = [*&#39;HelloWorld&#39;]
a
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[&#39;H&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;, &#39;W&#39;, &#39;o&#39;, &#39;r&#39;, &#39;l&#39;, &#39;d&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The previous example seems great, but when you work with these operators it’s important to keep in mind the seventh rule of 
&lt;a href=&#34;https://www.python.org/dev/peps/pep-0020/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;The Zen of Python&lt;/em&gt;&lt;/a&gt; by Tim Peters: &lt;em&gt;Readability counts&lt;/em&gt;!&lt;/p&gt;
&lt;p&gt;Consider the following example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;*a, = &#39;HelloWorld&#39;
a
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[&#39;H&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;, &#39;W&#39;, &#39;o&#39;, &#39;r&#39;, &#39;l&#39;, &#39;d&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There’s the unpacking operator &lt;code&gt;*&lt;/code&gt;, followed by a variable, a comma, and an assignment. That’s a lot packed into one line! In fact, this code is no different from the previous example. It just takes the string &lt;code&gt;HelloWorld&lt;/code&gt; and assigns all the items to the new list &lt;code&gt;a&lt;/code&gt;, thanks to the unpacking operator &lt;code&gt;*&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The comma after the &lt;code&gt;a&lt;/code&gt; does the trick. When you use the unpacking operator with variable assignment, Python requires that your resulting variable is either a list or a tuple. With the trailing comma, you have actually defined a tuple with just one named variable &lt;code&gt;a&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;While this is a neat trick, many Pythonistas would not consider this code to be very readable. &lt;strong&gt;As such, it’s best to use these kinds of constructions sparingly.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;heading-1&#34;&gt;&lt;code&gt;**&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;**&lt;/code&gt; operator works similarly as &lt;code&gt;*&lt;/code&gt;, but only for dictionary.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;my_first_dict = {&amp;quot;A&amp;quot;: 1, &amp;quot;B&amp;quot;: 2}
my_second_dict = {&amp;quot;C&amp;quot;: 3, &amp;quot;D&amp;quot;: 4}

my_merged_dict = {**my_first_dict, **my_second_dict}
my_merged_dict
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;{&#39;A&#39;: 1, &#39;B&#39;: 2, &#39;C&#39;: 3, &#39;D&#39;: 4}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Beautiful Python Code with PEP 8</title>
      <link>https://eckotan0804.github.io/notes/python/best-practice/beautiful-py-code-with-pep8/</link>
      <pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://eckotan0804.github.io/notes/python/best-practice/beautiful-py-code-with-pep8/</guid>
      <description>&lt;p&gt;Source: 
&lt;a href=&#34;https://realpython.com/python-pep8/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How to Write Beautiful Python Code With PEP 8&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;naming-conventions&#34;&gt;Naming Conventions&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;“Explicit is better than implicit.”
— The Zen of Python&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;‼️ Note: Never use l (\ell), O (zero), or I (capital i) single letter names as these can be mistaken for 1 and 0, depending on typeface:&lt;/p&gt;
&lt;h3 id=&#34;naming-styles&#34;&gt;Naming styles&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/EckoTan0804/upic-repo/master/uPic/Untitled.png&#34; alt=&#34;Beautiful%20Python%20Code%20with%20PEP%208%20ad6a9a89c353410c813a83ebda6504c3/Untitled.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;how-to-choose-names&#34;&gt;How to choose names&lt;/h3&gt;
&lt;p&gt;The best way to name your objects in Python is to use &lt;strong&gt;descriptive&lt;/strong&gt; names to make it clear what the object represents.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Always try to use the most concise but descriptive names possible.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;❌&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Not recommended
&amp;gt;&amp;gt;&amp;gt; x = &#39;John Smith&#39;
&amp;gt;&amp;gt;&amp;gt; y, z = x.split()
&amp;gt;&amp;gt;&amp;gt; print(z, y, sep=&#39;, &#39;)
&#39;Smith, John&#39;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;✅&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; # Recommended
&amp;gt;&amp;gt;&amp;gt; name = &#39;John Smith&#39;
&amp;gt;&amp;gt;&amp;gt; first_name, last_name = name.split()
&amp;gt;&amp;gt;&amp;gt; print(last_name, first_name, sep=&#39;, &#39;)
&#39;Smith, John&#39;

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;code-layout&#34;&gt;Code Layout&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;“Beautiful is better than ugly.”
— The Zen of Python&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;blank-lines&#34;&gt;Blank lines&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Surround top-level functions and classes with two blank lines&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class MyFirstClass:
    pass

class MySecondClass:
    pass

def top_level_function():
    return None

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Surround method definitions inside classes with a single blank line.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def first_method(self):
    return None

def second_method(self):
    return None

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Use blank lines sparingly inside functions to show clear steps.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def calculate_variance(number_list):
    sum_list = 0
    for number in number_list:
        sum_list = sum_list + number
    mean = sum_list / len(number_list)

    sum_squares = 0
    for number in number_list:
        sum_squares = sum_squares + number**2
    mean_squares = sum_squares / len(number_list)

    return mean_squares - mean**2

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;maximum-line-length-and-line-breaking&#34;&gt;Maximum Line Length and Line Breaking&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Lines should be limited to 79 characters.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Outlines ways to allow statements to run over several lines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Assume line continuation if code is contained within parentheses, brackets, or braces:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def function(arg_one, arg_two,
         arg_three, arg_four):
    return arg_one

&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Use backslashes to break lines if it is impossible to use implied continuation:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from mypkg import example1, \\
    example2, example3

&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;if you can use implied continuation, then you should do so.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If line breaking needs to occur around binary operators, like + and *, it should occur &lt;strong&gt;before&lt;/strong&gt; the operator&lt;/p&gt;
&lt;p&gt;❌&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Not Recommended
total = (first_variable +
         second_variable -
         third_variable)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;✅&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Recommended
total = (first_variable
         + second_variable
         - third_variable)

&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;indentation&#34;&gt;Indentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;strong&gt;4&lt;/strong&gt; consecutive spaces to indicate indentation.&lt;/li&gt;
&lt;li&gt;Prefer &lt;strong&gt;spaces over tabs&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;indentation-following-line-breaks&#34;&gt;Indentation Following Line Breaks&lt;/h3&gt;
&lt;p&gt;When you’re using line continuations to keep lines to under 79 characters, it is useful to use indentation to improve readability. It allows the reader to &lt;strong&gt;distinguish between two lines of code and a single line of code that spans two lines.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are two styles of indentation you can use:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;align the indented block with the opening delimiter:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    def function(arg_one, arg_two,
                 arg_three, arg_four):
        return arg_one

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sometimes only 4 spaces are needed to align with the opening delimiter. This will often occur in if statements that span multiple lines as the &lt;code&gt;if&lt;/code&gt;, space, and opening bracket make up 4 characters. In this case, it can be difficult to determine where the nested code block inside the if statement begins:&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    x = 5
    if (x &amp;gt; 3 and
        x &amp;lt; 10):
        print(x)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this case, PEP 8 provides two alternatives to help improve readability:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add a comment after the final condition.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;x = 5
if (x &amp;gt; 3 and
    x &amp;lt; 10):
    # Both conditions satisfied
    print(x)

&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add extra indentation on the line continuation:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;x = 5
if (x &amp;gt; 3 and
        x &amp;lt; 10):
    print(x)

&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;hanging indent&lt;/strong&gt;: You can use a hanging indent to visually represent a continuation of a line of code.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;var = function(
    arg_one, arg_two,
    arg_three, arg_four)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;‼️ When you’re using a hanging indent, &lt;strong&gt;there must not be any arguments on the first line&lt;/strong&gt;.
The following example is &lt;strong&gt;not&lt;/strong&gt; PEP 8 compliant:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;var = function(arg_one, arg_two,
    arg_three, arg_four)

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;When using a hanging indent, &lt;strong&gt;add extra indentation&lt;/strong&gt; to distinguish the continued line from code contained inside the function.&lt;/p&gt;
&lt;p&gt;❌&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Not Recommended
def function(
   arg_one, arg_two,
   arg_three, arg_four):
   return arg_one

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Instead, it’s better to use a double indent on the line continuation. This helps you to distinguish between function arguments and the function body, improving readability:&lt;/p&gt;
&lt;p&gt;✅&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Recommended
def function(
        arg_one, arg_two,
        arg_three, arg_four):
    return arg_one

&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;where-to-put-the-closing-brace&#34;&gt;Where to Put the Closing Brace&lt;/h3&gt;
&lt;p&gt;Two options for the position of the closing brace in implied line continuations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Line up the closing brace with the first non-whitespace character of the previous line:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;list_of_numbers = [
    1, 2, 3,
    4, 5, 6,
    7, 8, 9
    ]

&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Line up the closing brace with the first character of the line that starts the construct:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;list_of_numbers = [
    1, 2, 3,
    4, 5, 6,
    7, 8, 9
]

&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Consistency is key, try to stick to one of the above methods.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;comments-and-documentations&#34;&gt;Comments and Documentations&lt;/h2&gt;
&lt;p&gt;See: 
&lt;a href=&#34;quiver:///notes/CE487BE2-FAC4-4997-A723-244CFC727EA2&#34;&gt;Documenting Python Code&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;whitespace-in-expressions-and-statements&#34;&gt;Whitespace in Expressions and Statements&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;“Sparse is better than dense.”— The Zen of Python&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;whitespace-around-binary-operators&#34;&gt;Whitespace Around Binary Operators&lt;/h3&gt;
&lt;p&gt;Surround the following binary operators with a single space on either side:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Assignment operators (&lt;code&gt;=&lt;/code&gt;, &lt;code&gt;+=&lt;/code&gt;, &lt;code&gt;-=&lt;/code&gt;, and so forth)&lt;/li&gt;
&lt;li&gt;Comparisons (&lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;. &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;) and (&lt;code&gt;is&lt;/code&gt;, &lt;code&gt;is not&lt;/code&gt;, &lt;code&gt;in&lt;/code&gt;, &lt;code&gt;not in&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Booleans (&lt;code&gt;and&lt;/code&gt;, &lt;code&gt;not&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;‼️ &lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;When &lt;code&gt;=&lt;/code&gt; is used to assign a default value to a function argument, do &lt;strong&gt;NOT&lt;/strong&gt; surround it with spaces.&lt;/p&gt;
&lt;p&gt;✅&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Recommended
def function(default_parameter=5):
    # ...

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;❌&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Not recommended
def function(default_parameter = 5):
    # ...

&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If there&amp;rsquo;s more than one operator in a statement, &lt;strong&gt;only add whitespace around the operators with the lowest priority&lt;/strong&gt;. especially when performing mathematical manipulation.&lt;/p&gt;
&lt;p&gt;✅&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Recommended
y = x**2 + 5
z = (x+y) * (x-y)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;❌&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Not recommended
y = x ** 2 + 5
z = (x + y) * (x - y)

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Apply this rule to &lt;code&gt;if&lt;/code&gt; statements where there are multiple conditions:&lt;/p&gt;
&lt;p&gt;✅&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Recommended
if x&amp;gt;5 and x%2==0:
    print(&#39;x is larger than 5 and divisible by 2!&#39;)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;❌&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Not recommended
if x &amp;gt; 5 and x % 2 == 0:
    print(&#39;x is larger than 5 and divisible by 2!&#39;)

&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In slices, colons act as a binary operators. Therefore, the rules outlined in the previous section apply, and there should be the &lt;strong&gt;same amount of whitespace&lt;/strong&gt; either side. The following examples of list slices are valid:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;list[3:4]

# Treat the colon as the operator with lowest priority
list[x+1 : x+2]

# In an extended slice, both colons must be
# surrounded by the same amount of whitespace
list[3:4:5]
list[x+1 : x+2 : x+3]

# The space is omitted if a slice parameter is omitted
list[x+1 : x+2 :]

&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;
&lt;p&gt;Surround most operator with whitespace, except:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in function arguments&lt;/li&gt;
&lt;li&gt;combining multiple operators in one statement&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;programming-recommendations&#34;&gt;Programming Recommendations&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;“Simple is better than complex.”— The Zen of Python&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;🎯 Goal: readability and simplicity&lt;/p&gt;
&lt;h3 id=&#34;dont-compare-boolean-values-to-true-or-false-using-the-equivalence-operator&#34;&gt;Don’t compare boolean values to &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; using the equivalence operator.&lt;/h3&gt;
&lt;p&gt;❌&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Not recommended
my_bool = 6 &amp;gt; 5
if my_bool == True:
    return &#39;6 is bigger than 5&#39;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;✅&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Recommended
if my_bool:
    return &#39;6 is bigger than 5&#39;

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;use-the-fact-that-empty-sequences-are-falsy-in-if-statements&#34;&gt;Use the fact that empty sequences are falsy in &lt;code&gt;if&lt;/code&gt; statements.&lt;/h3&gt;
&lt;p&gt;In Python any empty list, string, or tuple is 
&lt;a href=&#34;https://docs.python.org/3/library/stdtypes.html#truth-value-testing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;falsy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;❌&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Not recommended
my_list = []
if not len(my_list):
    print(&#39;List is empty!&#39;)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;✅&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Recommended
my_list = []
if not my_list:
    print(&#39;List is empty!&#39;)

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;use-is-not-rather-than-not--is-in-if-statements&#34;&gt;Use &lt;code&gt;is not&lt;/code&gt; rather than &lt;code&gt;not ... is&lt;/code&gt; in &lt;code&gt;if&lt;/code&gt; statements.&lt;/h3&gt;
&lt;p&gt;❌&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Not recommended
if not x is None:
    return &#39;x exists!&#39;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;✅&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Recommended
if x is not None:
    return &#39;x exists!&#39;

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;dont-use-if-x-when-you-mean-if-x-is-not-none&#34;&gt;Don’t use &lt;code&gt;if x:&lt;/code&gt; when you mean &lt;code&gt;if x is not None:&lt;/code&gt;.&lt;/h3&gt;
&lt;p&gt;❌&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Not recommended
if arg:
    # Do something with arg...

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;✅&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Recommended
if arg is not None:
    # Do something with arg...

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;use-startswith-and-endswith-instead-of-slicing&#34;&gt;Use &lt;code&gt;.startswith()&lt;/code&gt; and &lt;code&gt;.endswith()&lt;/code&gt; instead of slicing.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;prefix&lt;/p&gt;
&lt;p&gt;❌&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Not recommended
if word[:3] == &#39;cat&#39;:
    print(&#39;The word starts with &amp;quot;cat&amp;quot;&#39;)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;✅&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Recommended
if word.startswith(&#39;cat&#39;):
    print(&#39;The word starts with &amp;quot;cat&amp;quot;&#39;)

&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;suffix&lt;/p&gt;
&lt;p&gt;❌&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Not recommended
if file_name[-3:] == &#39;jpg&#39;:
    print(&#39;The file is a JPEG&#39;)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;✅&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Recommended
if file_name.endswith(&#39;jpg&#39;):
    print(&#39;The file is a JPEG&#39;)

&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tips-and-tricks-to-help-ensure-your-code-follows-pep-8&#34;&gt;Tips and Tricks to Help Ensure Your Code Follows PEP 8&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Never ignore PEP 8!!!&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;linters&#34;&gt;Linters&lt;/h3&gt;
&lt;p&gt;Linters are programs that analyze code and flag errors. They provide suggestions on how to fix the error.&lt;/p&gt;
&lt;p&gt;Best linters for Python code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;
&lt;a href=&#34;https://pypi.org/project/pycodestyle/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;pycodestyle&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; is a tool to check your Python code against some of the style conventions in PEP 8.&lt;/p&gt;
&lt;p&gt;Install &lt;code&gt;pycodestyle&lt;/code&gt; using &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;$ pip install pycodestyle
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;
&lt;a href=&#34;https://pypi.org/project/flake8/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;flake8&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; is a tool that combines a debugger, &lt;code&gt;pyflakes&lt;/code&gt;, with &lt;code&gt;pycodestyle&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Install &lt;code&gt;flake8&lt;/code&gt; using &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;$ pip install flake8
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;autoformatters&#34;&gt;Autoformatters&lt;/h3&gt;
&lt;p&gt;Autoformatters are programs that refactor your code to conform with PEP 8 automatically. Once such program is 
&lt;a href=&#34;https://pypi.org/project/black/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;black&lt;/code&gt;&lt;/a&gt;, which autoformats code following &lt;em&gt;most&lt;/em&gt; of the rules in PEP 8.&lt;/p&gt;
&lt;p&gt;Install &lt;code&gt;black&lt;/code&gt; using &lt;code&gt;pip&lt;/code&gt;. It requires Python 3.6+ to run:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pip install black
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Documenting Python Code</title>
      <link>https://eckotan0804.github.io/notes/python/best-practice/documenting-py-code/</link>
      <pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://eckotan0804.github.io/notes/python/best-practice/documenting-py-code/</guid>
      <description>&lt;p&gt;Source: 
&lt;a href=&#34;https://realpython.com/documenting-python-code/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documenting Python Code: A Complete Guide&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;commenting-vs-documenting-code&#34;&gt;Commenting vs. Documenting Code&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Audience&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Commenting&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Purpose and design of code&lt;/td&gt;
&lt;td&gt;Maintainers and developers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Documenting&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Use and functionality of code&lt;/td&gt;
&lt;td&gt;Users&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;commenting-code&#34;&gt;Commenting Code&lt;/h2&gt;
&lt;p&gt;Comments are created in Python using the pound sign (&lt;code&gt;#&lt;/code&gt;) and should be &lt;strong&gt;brief statements no longer than a few sentences&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def hello_world():
  # A simple comment preceding a simple print statement
  print(&amp;quot;Hello World!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;According to 
&lt;a href=&#34;http://pep8.org/#maximum-line-length&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PEP 8&lt;/a&gt;, comments should have a &lt;strong&gt;maximum length of 72&lt;/strong&gt; characters. This is true even if your project changes the max line length to be greater than the recommended 80 characters.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def hello_long_world():
    # A very long statement that just goes on and on and on and on and
    # never ends until after it&#39;s reached the 80 char limit
    print(&amp;quot;Hellooooooooooooooooooooooooooooooooooooooooooooooooooooooo World&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;purpose-of-commenting-code&#34;&gt;Purpose of Commenting Code&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Planning and reviewing&lt;/strong&gt;
When developing new portion of code, first use comments as a way of planning or outlineing that section of code. &lt;strong&gt;Remember to remove these comments once the actual coding has been implemented and reviewed/tested&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def new_function():
  # Step 1
  # Step 2
  # Step 3
    
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Code description&lt;/strong&gt;
Explain the intent of specific sections of code&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Algorithmic description&lt;/strong&gt;
When algorithms are used, especially complicated ones, it can be useful to explain how the algorithm works or how it’s implemented within your code.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Using quick sort for performance gains
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Tagging:&lt;/strong&gt;
The use of tagging can be used to label specific sections of code where known issues or areas of improvement are located.
Some examples are: &lt;code&gt;BUG&lt;/code&gt;, &lt;code&gt;FIXME&lt;/code&gt;, and &lt;code&gt;TODO&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# TODO: Add condition for when val is None### 
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;rules-of-commenting&#34;&gt;Rules of Commenting&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Should be kept brief and focused&lt;/li&gt;
&lt;li&gt;Avoid using long comments when possible&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Essential rules as 
&lt;a href=&#34;https://blog.codinghorror.com/when-good-comments-go-bad/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;suggested by Jeff Atwood&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Keep comments as close to the code being described as possible.&lt;/li&gt;
&lt;li&gt;Don’t use complex formatting (such as tables or ASCII figures).&lt;/li&gt;
&lt;li&gt;Don’t include redundant information. Assume the reader of the code has a basic understanding of programming principles and language syntax.&lt;/li&gt;
&lt;li&gt;Design your code to comment itself. 💪&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;commenting-code-via-type-hinting-python-35&#34;&gt;Commenting Code via Type Hinting (Python 3.5+)&lt;/h3&gt;
&lt;p&gt;Type hinting was added to Python 3.5 and is an additional form to help the readers of your code.&lt;/p&gt;
&lt;p&gt;Example&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def hello_name(name: str) -&amp;gt; str:
  return (&amp;quot;Hello {name}&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can immediately tell that&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the function expects the input &lt;code&gt;name&lt;/code&gt; to be of a type &lt;code&gt;str&lt;/code&gt;, or string.&lt;/li&gt;
&lt;li&gt;the expected output of the function will be of a type &lt;code&gt;str&lt;/code&gt;, or string, as well.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;documenting-code-base-using-docstrings&#34;&gt;Documenting Code Base using Docstrings&lt;/h2&gt;
&lt;h3 id=&#34;docstings-background&#34;&gt;Docstings Background&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Docstrings are built-in strings that, when configured correctly, can help your users and yourself with your project’s documentation.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python also has the built-in function &lt;code&gt;help()&lt;/code&gt; that prints out the objects docstring to the console.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def say_hello(name):
  &amp;quot;&amp;quot;&amp;quot;A simple function that says hello&amp;quot;&amp;quot;&amp;quot;
  print(f&amp;quot;Hello {name})
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; help(say_hello)
Help on function say_hello in module __main__:

say_hello(name)
    A simple function that says hello
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;docstring-types&#34;&gt;Docstring Types&lt;/h3&gt;
&lt;p&gt;Docstring conventions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Are described within 
&lt;a href=&#34;https://www.python.org/dev/peps/pep-0257/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PEP 257&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Purpose: provide your users with a brief overview of the object.&lt;/li&gt;
&lt;li&gt;Should be kept concise enough to be easy to maintain but still be elaborate enough for new users to understand their purpose and how to use the documented object.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;In all cases, the docstrings should use the triple-double quote (&lt;code&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/code&gt;) string format.&lt;/strong&gt; This should be done whether the docstring is multi-lined or not.&lt;/p&gt;
&lt;p&gt;At a bare minimum, a docstring should be a quick summary of whatever is it you’re describing and should be contained within a single line:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;quot;&amp;quot;&amp;quot;This is a quick summary line used as a description of the object.&amp;quot;&amp;quot;&amp;quot;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Multi-lined docstrings are used to further elaborate on the object beyond the summary. All multi-lined docstrings have the following parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A one-line summary line&lt;/li&gt;
&lt;li&gt;A blank line proceeding the summary&lt;/li&gt;
&lt;li&gt;Any further elaboration for the docstring&lt;/li&gt;
&lt;li&gt;Another blank line&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;quot;&amp;quot;&amp;quot;This is the summary line

This is the further elaboration of the docstring. Within this section,
you can elaborate further on details as appropriate for the situation.
Notice that the summary and the elaboration is separated by a blank new
line.
&amp;quot;&amp;quot;&amp;quot;

# Notice the blank line above. Code should continue on this line.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All docstrings should have the same &lt;strong&gt;max character length as comments (72 characters).&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Three major categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Class Docstrings:&lt;/strong&gt; Class and class methods&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Package and Module Docstrings:&lt;/strong&gt; Package, modules, and functions&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Script Docstrings:&lt;/strong&gt; Script and functions&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;class-docstrings&#34;&gt;Class Docstrings&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class SimpleClass:
    &amp;quot;&amp;quot;&amp;quot;Class docstrings go here.&amp;quot;&amp;quot;&amp;quot;

    def say_hello(self, name: str):
        &amp;quot;&amp;quot;&amp;quot;Class method docstrings go here.&amp;quot;&amp;quot;&amp;quot;

        print(f&#39;Hello {name}&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Class docstrings should contain the following information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A brief summary of its purpose and behavior&lt;/li&gt;
&lt;li&gt;Any public methods, along with a brief description&lt;/li&gt;
&lt;li&gt;Any class properties (attributes)&lt;/li&gt;
&lt;li&gt;Anything related to the interface for subclassers, if the class is intended to be subclassed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The class constructor parameters should be documented within the &lt;code&gt;__init__&lt;/code&gt; class method docstring.&lt;/p&gt;
&lt;p&gt;Individual methods should be documented using their individual docstrings. Class method docstrings should contain the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A brief description of what the method is and what it’s used for&lt;/li&gt;
&lt;li&gt;Any arguments (both required and optional) that are passed including keyword arguments&lt;/li&gt;
&lt;li&gt;Label any arguments that are considered optional or have a default value&lt;/li&gt;
&lt;li&gt;Any side effects that occur when executing the method&lt;/li&gt;
&lt;li&gt;Any exceptions that are raised&lt;/li&gt;
&lt;li&gt;Any restrictions on when the method can be called&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class Animal:
    &amp;quot;&amp;quot;&amp;quot;
    A class used to represent an Animal

    ...

    Attributes
    ----------
    says_str : str
        a formatted string to print out what the animal says
    name : str
        the name of the animal
    sound : str
        the sound that the animal makes
    num_legs : int
        the number of legs the animal has (default 4)

    Methods
    -------
    says(sound=None)
        Prints the animals name and what sound it makes
    &amp;quot;&amp;quot;&amp;quot;

    says_str = &amp;quot;A {name} says {sound}&amp;quot;

    def __init__(self, name, sound, num_legs=4):
        &amp;quot;&amp;quot;&amp;quot;
        Parameters
        ----------
        name : str
            The name of the animal
        sound : str
            The sound the animal makes
        num_legs : int, optional
            The number of legs the animal (default is 4)
        &amp;quot;&amp;quot;&amp;quot;

        self.name = name
        self.sound = sound
        self.num_legs = num_legs

    def says(self, sound=None):
        &amp;quot;&amp;quot;&amp;quot;Prints what the animals name is and what sound it makes.

        If the argument `sound` isn&#39;t passed in, the default Animal
        sound is used.

        Parameters
        ----------
        sound : str, optional
            The sound the animal makes (default is None)

        Raises
        ------
        NotImplementedError
            If no sound is set for the animal or passed in as a
            parameter.
        &amp;quot;&amp;quot;&amp;quot;

        if self.sound is None and sound is None:
            raise NotImplementedError(&amp;quot;Silent Animals are not supported!&amp;quot;)

        out_sound = self.sound if sound is None else sound
        print(self.says_str.format(name=self.name, sound=out_sound))
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;package-and-module-docstrings&#34;&gt;Package and Module Docstrings&lt;/h4&gt;
&lt;p&gt;Package Docstrings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Should be placed at the top of the package’s &lt;code&gt;__init__.py&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;Should list the modules and sub-packages that are exported by the package&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Module Docstrings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Placed at the top of the file even before any imports&lt;/li&gt;
&lt;li&gt;Should include:
&lt;ul&gt;
&lt;li&gt;A brief description of the module and its purpose&lt;/li&gt;
&lt;li&gt;A list of any classes, exception, functions, and any other objects exported by the module&lt;/li&gt;
&lt;li&gt;Docstring for a module function should include the same items as a class method&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;script-docstrings&#34;&gt;Script Docstrings&lt;/h4&gt;
&lt;p&gt;Scripts: single file executables run from the console.&lt;/p&gt;
&lt;p&gt;Docstrings for scripts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Placed at the &lt;strong&gt;top of the file&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;should be documented well enough for users to be able to have a sufficient understanding of how to use the script&lt;/li&gt;
&lt;li&gt;Should be usable for its “usage” message, when the user incorrectly passes in a parameter or uses the &lt;code&gt;-h&lt;/code&gt; option&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Any custom or third-party imports should be listed within the docstrings to allow users to know which packages may be required for running the script&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Spreadsheet Column Printer

This script allows the user to print to the console all columns in the
spreadsheet. It is assumed that the first row of the spreadsheet is the
location of the columns.

This tool accepts comma separated value files (.csv) as well as excel
(.xls, .xlsx) files.

This script requires that `pandas` be installed within the Python
environment you are running this script in.

This file can also be imported as a module and contains the following
functions:

    * get_spreadsheet_cols - returns the column headers of the file
    * main - the main function of the script
&amp;quot;&amp;quot;&amp;quot;

import argparse

import pandas as pd


def get_spreadsheet_cols(file_loc, print_cols=False):
    &amp;quot;&amp;quot;&amp;quot;Gets and prints the spreadsheet&#39;s header columns

    Parameters
    ----------
    file_loc : str
        The file location of the spreadsheet
    print_cols : bool, optional
        A flag used to print the columns to the console (default is
        False)

    Returns
    -------
    list
        a list of strings used that are the header columns
    &amp;quot;&amp;quot;&amp;quot;

    file_data = pd.read_excel(file_loc)
    col_headers = list(file_data.columns.values)

    if print_cols:
        print(&amp;quot;\n&amp;quot;.join(col_headers))

    return col_headers


def main():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument(
        &#39;input_file&#39;,
        type=str,
        help=&amp;quot;The spreadsheet file to pring the columns of&amp;quot;
    )
    args = parser.parse_args()
    get_spreadsheet_cols(args.input_file, print_cols=True)


if __name__ == &amp;quot;__main__&amp;quot;:
    main()
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;docstring-formats&#34;&gt;Docstring Formats&lt;/h3&gt;
&lt;p&gt;Some of the most common formats are the following:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Formatting Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Supported by Sphynx&lt;/th&gt;
&lt;th&gt;Formal Specification&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;a href=&#34;https://github.com/google/styleguide/blob/gh-pages/pyguide.md#38-comments-and-docstrings&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google docstrings&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Google’s recommended form of documentation&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;a href=&#34;http://docutils.sourceforge.net/rst.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;reStructured Text&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Official Python documentation standard; Not beginner friendly but feature rich&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;a href=&#34;https://numpydoc.readthedocs.io/en/latest/format.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NumPy/SciPy docstrings&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;NumPy’s combination of reStructured and Google Docstrings&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;a href=&#34;http://epydoc.sourceforge.net/epytext.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Epytext&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A Python adaptation of Epydoc; Great for Java developers&lt;/td&gt;
&lt;td&gt;Not officially&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The selection of the docstring format is up to you, but you should stick with the same format throughout your document/project. The following are examples of each type to give you an idea of how each documentation format looks.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>zip</title>
      <link>https://eckotan0804.github.io/notes/python/py-basics/zip/</link>
      <pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://eckotan0804.github.io/notes/python/py-basics/zip/</guid>
      <description>&lt;p&gt;&lt;code&gt;zip()&lt;/code&gt;: creates an iterator that will aggregate elements from two or more iterables.&lt;/p&gt;
&lt;p&gt;According to the 
&lt;a href=&#34;https://docs.python.org/3/library/functions.html#zip&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;official documentation&lt;/a&gt;, Python’s &lt;code&gt;zip()&lt;/code&gt; function behaves as follows:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Returns an iterator of tuples, where the &lt;em&gt;i&lt;/em&gt;-th tuple contains the &lt;em&gt;i&lt;/em&gt;-th element from each of the argument sequences or iterables. The iterator stops when the shortest input iterable is exhausted. With a single iterable argument, it returns an iterator of 1-tuples. With no arguments, it returns an empty iterator.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Python zip operations work just like the physical zipper on a bag or pair of jeans. Interlocking pairs of teeth on both sides of the zipper are pulled together to close an opening.&lt;/p&gt;
&lt;h2 id=&#34;use-zip-in-python&#34;&gt;Use &lt;code&gt;zip()&lt;/code&gt; in python&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;zip(*iterables)&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;takes in 
&lt;a href=&#34;https://docs.python.org/3/glossary.html#term-iterable&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;iterables&lt;/a&gt; as arguments and returns an &lt;strong&gt;iterator&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;generates a series of tuples containing elements from each iterable&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;can accept any type of iterable, such as 
&lt;a href=&#34;https://realpython.com/read-write-files-python/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;files&lt;/a&gt;, 
&lt;a href=&#34;https://realpython.com/python-lists-tuples/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;lists, tuples&lt;/a&gt;, 
&lt;a href=&#34;https://realpython.com/python-dicts/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dictionaries&lt;/a&gt;, 
&lt;a href=&#34;https://realpython.com/python-sets/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sets&lt;/a&gt;, and so on.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pass n arguments&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Pass n arguments
numbers = [1, 2, 3]
letters = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]
upper_letters = [&#39;A&#39;, &#39;B&#39;, &#39;C&#39;]
zipped = zip(numbers, letters, upper_letters)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;zipped
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;zip at 0x62479ae08&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;list(zipped)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[(1, &#39;a&#39;, &#39;A&#39;), (2, &#39;b&#39;, &#39;B&#39;), (3, &#39;c&#39;, &#39;C&#39;)]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;num_tuple = (1, 2)
lettet_tuple = (&#39;a&#39;, &#39;b&#39;)
upper_letter_tuple = (&#39;A&#39;, &#39;B&#39;)
list(zip(num_tuple, lettet_tuple, upper_letter_tuple))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[(1, &#39;a&#39;, &#39;A&#39;), (2, &#39;b&#39;, &#39;B&#39;)]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pass no arguments&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Passing no argument
zipped = zip()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;zipped
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;zip at 0x62473c908&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;list(zipped)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pass one arguments&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Pass one argument
zipped = zip(numbers)
list(zipped)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[(1,), (2,), (3,)]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pass arguments of &lt;strong&gt;unequal&lt;/strong&gt; length:&lt;/p&gt;
&lt;p&gt;the number of elements that &lt;code&gt;zip()&lt;/code&gt; puts out will be equal to the length of the &lt;strong&gt;shortest&lt;/strong&gt; iterable. The remaining elements in any longer iterables will be totally ignored by zip()&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;list(zip(range(5), range(100)))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If trailing or unmatched values are important, then use 
&lt;a href=&#34;https://docs.python.org/3/library/itertools.html#itertools.zip_longest&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;itertools.zip_longest()&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;zip()&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from itertools import zip_longest

longest = range(5)
zipped = zip_longest(numbers, letters, longest, fillvalue=&#39;?&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;list(zipped)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[(1, &#39;a&#39;, 0), (2, &#39;b&#39;, 1), (3, &#39;c&#39;, 2), (&#39;?&#39;, &#39;?&#39;, 3), (&#39;?&#39;, &#39;?&#39;, 4)]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;loop-over-multiple-iterables&#34;&gt;Loop Over Multiple Iterables&lt;/h2&gt;
&lt;p&gt;Looping over multiple iterables is one of the most common use cases for Python’s &lt;code&gt;zip()&lt;/code&gt; function&lt;/p&gt;
&lt;h3 id=&#34;traverse-lists-in-parallel&#34;&gt;Traverse lists in parallel&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;letters
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;numbers
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1, 2, 3]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;for l,n in zip(letters, numbers):
    print(f&#39;letter: {l}&#39;)
    print(f&#39;number: {n} \n&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;letter: a
number: 1 

letter: b
number: 2 

letter: c
number: 3 
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;traverse-dictionaries-in-parallel&#34;&gt;Traverse dictionaries in parallel&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dict_one = {&#39;name&#39;: &#39;John&#39;, &#39;last_name&#39;: &#39;Doe&#39;, &#39;job&#39;: &#39;Python Consultant&#39;}
dict_two = {&#39;name&#39;: &#39;Jane&#39;, &#39;last_name&#39;: &#39;Doe&#39;, &#39;job&#39;: &#39;Community Manager&#39;}

for (k1, v1), (k2, v2) in zip(dict_one.items(), dict_two.items()):
    print(k1, &#39;-&amp;gt;&#39;, v1)
    print(k2, &#39;-&amp;gt;&#39;, v2, &#39;\n&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;name -&amp;gt; John
name -&amp;gt; Jane 

last_name -&amp;gt; Doe
last_name -&amp;gt; Doe 

job -&amp;gt; Python Consultant
job -&amp;gt; Community Manager 
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;unzip-a-sequence&#34;&gt;Unzip a sequence&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;zip(*zipped)&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;numbers
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1, 2, 3]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;letters
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;zipped = zip(numbers, letters)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;zipped_list = list(zipped)
zipped_list
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[(1, &#39;a&#39;), (2, &#39;b&#39;), (3, &#39;c&#39;)]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have a list of tuples and want to separate the elements of each tuple into independent sequences. To do this, we can use &lt;code&gt;zip()&lt;/code&gt; along with the 
&lt;a href=&#34;https://realpython.com/python-kwargs-and-args/#unpacking-with-the-asterisk-operators&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;unpacking operator &lt;code&gt;*&lt;/code&gt;&lt;/a&gt;,&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;list(zip(*zipped_list))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[(1, 2, 3), (&#39;a&#39;, &#39;b&#39;, &#39;c&#39;)]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; version=&#34;1.1&#34; width=&#34;3043px&#34; viewBox=&#34;-0.5 -0.5 3043 2062&#34; content=&#34;&amp;lt;mxfile host=&amp;quot;app.diagrams.net&amp;quot; modified=&amp;quot;2020-07-06T16:28:01.174Z&amp;quot; agent=&amp;quot;5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36&amp;quot; etag=&amp;quot;1l50Gr0cZYkznZ8h5aUm&amp;quot; version=&amp;quot;13.3.9&amp;quot; type=&amp;quot;device&amp;quot;&amp;gt;&amp;lt;diagram id=&amp;quot;GIBQfwL42elWJfeV2FHo&amp;quot; name=&amp;quot;Page-1&amp;quot;&amp;gt;7Z1tk6JIEoB/jTEzG9EdFO98VHt7+uJmZmdvYnfv7ssGDajsIjhYduv8+q3iTSHLFhQsQPpLS6HQnU+SmZWZVY6k6XL7MTRXi8+B7XgjUbC3I+lhJIpIFlXyi47s4hFNQ/HAPHTt5E37gW/uDycZFJLRjWs769wbcRB42F3lB63A9x0L58bMMAxe82+bBV7+ritz7oCBb5bpwdE/XBsv4lFJEoT9iSfHnS+SW5NTRnxmaabvTt66Xph28HowJP08kqZhEOD41XI7dTwqvVQw8ecej5zN/rLQ8XGZD1je0tkan8zti/DLvx/FP3ba4+QOSWJ8nRfT2yT/c/Ln4l0qhDDY+LZDLyOMpMnrwsXOt5Vp0bOvBDsZW+ClR44QeTlzPW8aeEFIjv3Ad+hQ4ONHc+l6VAmmwSZ0nZDc4YvzmpxMuEtCcpx+fiQSQdMfMm6b60X0N9CbrHEY/J0RkcgIlEYioBcnxM72YCiRzkcnWDo43JG3JGf1BFSiqmp6/LoHj5SU5uIAupEOmom2zbNr73mQFwmSSnjkmvGcEOMpek+O9+Jg1zLz5NS3yNWABqlqHg5CAoOOrDLoIFFoDA+A42+WazISHQgjZULeQS4tiPEvaaQ8AHxEBDjPKMZSxADJmJ4798mhRQRLnihpQgVK2Hjj5MTStW16G6ZS5NXmAKYonHpm6yAq5oGKMuSZjR3ilJuCCQ2h52Ai1xzPd+N3Mcp3k/TF9F27qZaxvGJNz6lSgipxnlekKgGqP9zVyrH/9Nw1zsjSg/fkxPv4+aVcE/gfPnQcrVQTWiNPVlchWY1lfpt7XtXTrnFOZLYq/89ncaT5nF5BeFMoRSsmiSWtmN6YVDQgFSiWEzGCuV7FsfTM3VJ9q2ZGDvWehAGz2Uy0LPCQkDO2+qwqKlM73wZeOaI7oKFfFYYOYEg3CwMxLMZ1aRiABro9GrykX2Ym07S5VtS2mWtJAVIZc9VJ23T0GVMnVUt3nmfldTID3mKdhCHE5Pak3xJnKcHIZXqzMLg7Sxk6SwDD8e0xzbGSI8sz12vXKqQCS2SOENvLJfbdsXPp2Tcth8IQTzoWOp6J3Ze812fJLLnD18D18cHcRytknwS1IPc1US3LST4mHiRhC1dCglC4FCpeCpvh3MHgUhHF7D8/H2wqkhxY1aMz2vXK9HOE1e8bmp2OeN3NEpJjOmsWVXO5ishJRLmliZU9Wj55tIpn91cir+bJby+98vFbriMdoTeUhNUWXuWn3Fw+viIRSnzR/I3IcPzvpcPDpD4yM4WkNxK1kiFRY/N6FWZVjwSKFc37US7Hw+9jAXuDMaoh5YnojEQ3yxM0CATw6EtGQS3/wOzykufllmGM1JeEQnUW3GMkOHfrSz6hAgxewkcSFDYNF78lh4l3zvvXIMSLYB74pvcpCFYJg78cjHeJWM0NDvKEnK2L/0s/fq8pyeH/kqvR1w/bw4PdOX68fN30TVZxCHradsTx5en3nYy9SwfVl3kfkXs4kE33jk0QGwwHULHEwD8egEntqCrai5l6pm3tNXxwYh7Vom9N/C0JyBCcTtOOgFvFwT0m02DB/4i7aHAKh/Ime9+BdNgGweoky3oj6o9VYfmlL7O4DHnptEexmYxRBrruRALOJPoyrbsYDquF6LpwYP6jL9O88+Fwg9Hn4LM6DsQ7/FH6HI1ewKMtnkXtc3h6OR/uzkWF4ep7QKdbtamKawEuJZuVZAHIqzbyqDC+HkCeBVLiTRIG4wPJc0hm3RfcSMLIvevd/FcmmZwtLo3jbmxhGXQAWwtY7sYXzu8GsnWQ5W+MWQ2F1ZrAZGYTWLRc60jv16A41adIckFxOOuNBmewg950QG+4u5J0p4lBcbqlONw9lVZipdLNtL7v+9Mv730HJuLave8anNqPlBt7aqtviwKrpeUeUNTYvhsaY+l35/dgaHwPFbHQWY5kRvb7yiDhRD63pKPTQCs2d1YGqhaXEjGXswoMoI21Bmpw+t7ZxUV0O5DDBUYfhhVG51gdQ9bvlbyeaqxdYVhlt8b01Kg7xKvdDLQl/AO9UpJybvhnKEATwMUaDgANRgDIhTvBHe7iZQWqpKQDdGHBnXAvyGo6sl9eEB3tDo++OqFLBEItwsObunSy419qlc6JhWmCXGyKLKtxYmHZroyurG0ldii6trbpolrQNiTot6xtxRWwcnEzx7LapomctQ3G0ty1LWfZhBNqdr5GpWFnS1SK+DXg6ZRiLFPaiDEupl1btUpsBtH4VmuGBuSADEYgiRhgm+ur16BooGy62R2cUe9sX3164R721V8Mh3vrow7rM33pqz8fDjcYIoDRn7766ji499XrsC+4P331F/BojWeBCaT+9NVfzoe/cxmaeC8k25JWTx3mUAaQZ4Hk3Y+jw/zEQPIcktwbZPTjVb6hs6oNitLSVk59aAHupN5wdx1pmm9QnG4pDndPZcAc07Cc5ByyxVIq72mBAfNVA9hawHK39TDzNZCtgyx3Y5y1kfIsI4oSLCMq/MuISICeCgqnm9WQPffOFhKRAP1NXyqJl+Phnu1FAnQafaklXoCHHw5GdaQ31cQzgHAvJyIB1kP6U0+8hEh7PAwsdPSnolgDoRY4maGAcSnblmQPaMvzgLIelLzzBUiAVYWB5Vks+WcIGLupD4n+VqlKS0uLCA27fXRTc/g7EARzO4PqdEF1WuCvhmJFTWzbVmBECOawBrT1oOVv8WE2bGBbC9sWmOQSi64bX6tYXMKuMcQioawQmasxNrbZThnJ1LVA+MjeZm8j4718t/TS3N0RVA0vw0XM3ZLobZIo8zlMA0wrWD67xBh1wKgd2R1PrGK4MtWukIJUwBOJWDX/4g4ltT2Ocok9aNYLc0VfukuTPhqT6Pc4zfFTCYGEf4rlk/nseF+DtYvdgOJ5DjAOlgxumH4RKqN+SX5Koooe9uRPfFhgvFpHsyKilo+Ob4W7FXbsO/zsC/fzNSZPpnVP1JOcjD5C3vv4nf4Zz/5IVKTx+IttfLR+3T1pM2nz8PnpN7z9/dN/lH89/TX7Okc/Jl9+//UjGpvIFqbLlTj9bkj/X/ziLrVsX6jN+vuKGqfxb5He0RtGArijFYVGVCqz+nmjLzM0TGbafGSI94bemEcssTFE4203GirZdnNtp4hYixla4RXLfg/vrXtFBAsAg1vMP/kdcouZFR38Yjv9YnmdSs8Wt+FqiV8UWSUDpl+s2EZR/pvFs2awY+1jTbpk2AlLt8IEbK775eIohdDHRtgK22fu8sLn1vQiwgx3bxpfq+Pg/vXWSISzxt50ulbgwU/+JXYQbXwypYIt4VphuRkdjP3p+s3At1k54Uy/R12+FQi0xnsyvq66P0291YG0wH+W2Mpy2Pk7chRwoZxx9k7MMkj/iUJxo92m80TpHz+gP4VeMWpErzKmmVdHD2cxUYqwlWlA21wvooOyXyTV+DcA5fM3KsOtZlm761hxCUbhG38gWj4lpxZX2Ga9H4dQa3LN5DAMaGfk/pkmUlp8DmyHvuMf&amp;lt;/diagram&amp;gt;&amp;lt;/mxfile&amp;gt;&#34; onclick=&#34;(function(svg){var src=window.event.target||window.event.srcElement;while (src!=null&amp;amp;&amp;amp;src.nodeName.toLowerCase()!=&#39;a&#39;){src=src.parentNode;}if(src==null){if(svg.wnd!=null&amp;amp;&amp;amp;!svg.wnd.closed){svg.wnd.focus();}else{var r=function(evt){if(evt.data==&#39;ready&#39;&amp;amp;&amp;amp;evt.source==svg.wnd){svg.wnd.postMessage(decodeURIComponent(svg.getAttribute(&#39;content&#39;)),&#39;*&#39;);window.removeEventListener(&#39;message&#39;,r);}};window.addEventListener(&#39;message&#39;,r);svg.wnd=window.open(&#39;https://app.diagrams.net/?client=1&amp;amp;lightbox=1&amp;amp;edit=_blank&#39;);}}})(this);&#34; style=&#34;cursor:pointer;max-width:100%;max-height:2062px;&#34;&gt;&lt;defs/&gt;&lt;g&gt;&lt;rect x=&#34;1&#34; y=&#34;440&#34; width=&#34;1520&#34; height=&#34;920&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-width=&#34;3&#34; stroke-dasharray=&#34;9 9&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;1581&#34; y=&#34;860&#34; width=&#34;1460&#34; height=&#34;1200&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-width=&#34;3&#34; stroke-dasharray=&#34;9 9&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;41&#34; y=&#34;0&#34; width=&#34;240&#34; height=&#34;40&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 238px; height: 1px; padding-top: 20px; margin-left: 42px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;nums = [1, 2, 3]&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;161&#34; y=&#34;26&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;nums = [1, 2, 3]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;441&#34; y=&#34;0&#34; width=&#34;330&#34; height=&#34;40&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 328px; height: 1px; padding-top: 20px; margin-left: 442px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;letters = [&amp;lsquo;A&amp;rsquo;, &amp;lsquo;B&amp;rsquo;, &amp;lsquo;C&amp;rsquo;]&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;606&#34; y=&#34;26&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;letters = [&amp;lsquo;A&amp;rsquo;, &amp;lsquo;B&amp;rsquo;, &amp;lsquo;C&amp;rsquo;]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;11&#34; y=&#34;620&#34; width=&#34;760&#34; height=&#34;40&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 758px; height: 1px; padding-top: 640px; margin-left: 12px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 30px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;zipped_list = list(zip(nums, letters))&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;391&#34; y=&#34;649&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;30px&#34; text-anchor=&#34;middle&#34;&gt;zipped_list = list(zip(nums, letters))&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;121&#34; y=&#34;80&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 120px; margin-left: 122px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;2&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;161&#34; y=&#34;126&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;2&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;201&#34; y=&#34;80&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 120px; margin-left: 202px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;3&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;241&#34; y=&#34;126&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;3&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;41&#34; y=&#34;80&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 120px; margin-left: 42px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;1&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;81&#34; y=&#34;126&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;1&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;481&#34; y=&#34;80&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 120px; margin-left: 482px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;A&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;521&#34; y=&#34;126&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;A&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;561&#34; y=&#34;80&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 120px; margin-left: 562px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;B&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;601&#34; y=&#34;126&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;B&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;641&#34; y=&#34;80&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 120px; margin-left: 642px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;C&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;681&#34; y=&#34;126&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;C&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 891 820 L 919.17 913.9&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 920.68 918.93 L 915.31 913.23 L 919.17 913.9 L 922.02 911.22 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;1601&#34; y=&#34;1030&#34; width=&#34;240&#34; height=&#34;40&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 238px; height: 1px; padding-top: 1050px; margin-left: 1602px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 30px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&lt;span style=&#34;font-family: &amp;quot;courier new&amp;quot;&#34;&gt;&lt;font style=&#34;font-size: 30px&#34;&gt;&lt;em&gt;zipped_list&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;1721&#34; y=&#34;1059&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;30px&#34; text-anchor=&#34;middle&#34;&gt;&lt;/em&gt;zipped_list&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;851&#34; y=&#34;560&#34; width=&#34;80&#34; height=&#34;240&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;851&#34; y=&#34;640&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 680px; margin-left: 852px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;2&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;891&#34; y=&#34;686&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;2&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;851&#34; y=&#34;720&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 760px; margin-left: 852px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;3&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;891&#34; y=&#34;766&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;3&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;851&#34; y=&#34;560&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 600px; margin-left: 852px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;1&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;891&#34; y=&#34;606&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;1&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 911 720 L 911 720&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 911 720 L 911 720 L 911 720 L 911 720 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;1041&#34; y=&#34;560&#34; width=&#34;80&#34; height=&#34;240&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;1041&#34; y=&#34;560&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 600px; margin-left: 1042px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&#39;A&#39;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;1081&#34; y=&#34;606&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;&#39;A&#39;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;1041&#34; y=&#34;640&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 680px; margin-left: 1042px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&#39;B&#39;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;1081&#34; y=&#34;686&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;&#39;B&#39;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;1041&#34; y=&#34;720&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 760px; margin-left: 1042px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&#39;C&#39;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;1081&#34; y=&#34;766&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;&#39;C&#39;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;891&#34; y=&#34;1080&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1120px; margin-left: 892px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;2&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;931&#34; y=&#34;1126&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;2&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;891&#34; y=&#34;1200&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1240px; margin-left: 892px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;3&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;931&#34; y=&#34;1246&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;3&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;891&#34; y=&#34;960&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1000px; margin-left: 892px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;1&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;931&#34; y=&#34;1006&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;1&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;1011&#34; y=&#34;960&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1000px; margin-left: 1012px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&#39;A&#39;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;1051&#34; y=&#34;1006&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;&#39;A&#39;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;1011&#34; y=&#34;1080&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1120px; margin-left: 1012px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&#39;B&#39;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;1051&#34; y=&#34;1126&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;&#39;B&#39;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;1011&#34; y=&#34;1200&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1240px; margin-left: 1012px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&#39;C&#39;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;1051&#34; y=&#34;1246&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;&#39;C&#39;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;831&#34; y=&#34;970&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1010px; margin-left: 832px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;(&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;851&#34; y=&#34;1028&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;(&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;831&#34; y=&#34;1090&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1130px; margin-left: 832px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;(&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;851&#34; y=&#34;1148&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;(&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;831&#34; y=&#34;1210&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1250px; margin-left: 832px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;(&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;851&#34; y=&#34;1268&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;(&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;1111&#34; y=&#34;970&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1010px; margin-left: 1112px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;)&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;1131&#34; y=&#34;1028&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;)&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;1111&#34; y=&#34;1090&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1130px; margin-left: 1112px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;)&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;1131&#34; y=&#34;1148&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;)&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;1111&#34; y=&#34;1210&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1250px; margin-left: 1112px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;)&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;1131&#34; y=&#34;1268&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;)&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;971&#34; y=&#34;980&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1020px; margin-left: 972px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&lt;font style=&#34;font-size: 40px&#34;&gt;,&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;991&#34; y=&#34;1038&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;,&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;971&#34; y=&#34;1090&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1130px; margin-left: 972px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&lt;font style=&#34;font-size: 40px&#34;&gt;,&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;991&#34; y=&#34;1148&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;,&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;971&#34; y=&#34;1210&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1250px; margin-left: 972px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&lt;font style=&#34;font-size: 40px&#34;&gt;,&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;991&#34; y=&#34;1268&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;,&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 1081 820 L 1062.25 913.76&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 1061.22 918.9 L 1059.16 911.35 L 1062.25 913.76 L 1066.02 912.73 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;781&#34; y=&#34;960&#34; width=&#34;40&#34; height=&#34;100&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1010px; margin-left: 782px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;[&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;801&#34; y=&#34;1028&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;[&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;1151&#34; y=&#34;1200&#34; width=&#34;40&#34; height=&#34;100&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1250px; margin-left: 1152px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;]&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;1171&#34; y=&#34;1268&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;521&#34; y=&#34;1080&#34; width=&#34;200&#34; height=&#34;40&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 1100px; margin-left: 522px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 30px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;zipped_list&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;621&#34; y=&#34;1109&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;30px&#34; text-anchor=&#34;middle&#34;&gt;zipped_list&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;1869.5&#34; y=&#34;1500&#34; width=&#34;380&#34; height=&#34;40&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 378px; height: 1px; padding-top: 1520px; margin-left: 1871px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 30px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&lt;span style=&#34;font-family: &amp;quot;courier new&amp;quot;&#34;&gt;&lt;font style=&#34;font-size: 30px&#34;&gt;zip(*zipped_list)&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2060&#34; y=&#34;1529&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;30px&#34; text-anchor=&#34;middle&#34;&gt;zip(*zipped_list)&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 1181 1110 L 1873.13 1110&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 1878.38 1110 L 1871.38 1113.5 L 1873.13 1110 L 1871.38 1106.5 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 161 190 L 489.69 613.13&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 492.91 617.28 L 485.86 613.9 L 489.69 613.13 L 491.38 609.6 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 601 180 L 638.21 609.34&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 638.66 614.57 L 634.57 607.89 L 638.21 609.34 L 641.55 607.29 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 2059.5 1300 L 2059.5 1493.63&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 2059.5 1498.88 L 2056 1491.88 L 2059.5 1493.63 L 2063 1491.88 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;1959.5&#34; y=&#34;1070&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1110px; margin-left: 1961px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;2&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2000&#34; y=&#34;1116&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;2&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;1959.5&#34; y=&#34;1190&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1230px; margin-left: 1961px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;3&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2000&#34; y=&#34;1236&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;3&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;1959.5&#34; y=&#34;950&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 990px; margin-left: 1961px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;1&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2000&#34; y=&#34;996&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;1&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2079.5&#34; y=&#34;950&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 990px; margin-left: 2081px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&#39;A&#39;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2120&#34; y=&#34;996&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;&#39;A&#39;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2079.5&#34; y=&#34;1070&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1110px; margin-left: 2081px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&#39;B&#39;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2120&#34; y=&#34;1116&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;&#39;B&#39;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2079.5&#34; y=&#34;1190&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1230px; margin-left: 2081px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&#39;C&#39;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2120&#34; y=&#34;1236&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;&#39;C&#39;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;1899.5&#34; y=&#34;960&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1000px; margin-left: 1901px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;(&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;1920&#34; y=&#34;1018&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;(&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;1899.5&#34; y=&#34;1080&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1120px; margin-left: 1901px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;(&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;1920&#34; y=&#34;1138&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;(&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;1899.5&#34; y=&#34;1200&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1240px; margin-left: 1901px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;(&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;1920&#34; y=&#34;1258&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;(&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2039.5&#34; y=&#34;970&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1010px; margin-left: 2041px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&lt;font style=&#34;font-size: 40px&#34;&gt;,&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2060&#34; y=&#34;1028&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;,&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2039.5&#34; y=&#34;1080&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1120px; margin-left: 2041px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&lt;font style=&#34;font-size: 40px&#34;&gt;,&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2060&#34; y=&#34;1138&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;,&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2039.5&#34; y=&#34;1200&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1240px; margin-left: 2041px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&lt;font style=&#34;font-size: 40px&#34;&gt;,&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2060&#34; y=&#34;1258&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;,&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2169.5&#34; y=&#34;960&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1000px; margin-left: 2171px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;)&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2190&#34; y=&#34;1018&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;)&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2169.5&#34; y=&#34;1080&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1120px; margin-left: 2171px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;)&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2190&#34; y=&#34;1138&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;)&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2169.5&#34; y=&#34;1200&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1240px; margin-left: 2171px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;)&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2190&#34; y=&#34;1258&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;)&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2359.5&#34; y=&#34;1470&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1510px; margin-left: 2361px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;2&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2400&#34; y=&#34;1516&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;2&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2359.5&#34; y=&#34;1590&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1630px; margin-left: 2361px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;3&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2400&#34; y=&#34;1636&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;3&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2359.5&#34; y=&#34;1350&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1390px; margin-left: 2361px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;1&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2400&#34; y=&#34;1396&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;1&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2479.5&#34; y=&#34;1350&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1390px; margin-left: 2481px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&#39;A&#39;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2520&#34; y=&#34;1396&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;&#39;A&#39;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2479.5&#34; y=&#34;1470&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1510px; margin-left: 2481px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&#39;B&#39;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2520&#34; y=&#34;1516&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;&#39;B&#39;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2479.5&#34; y=&#34;1590&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1630px; margin-left: 2481px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&#39;C&#39;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2520&#34; y=&#34;1636&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;&#39;C&#39;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2299.5&#34; y=&#34;1360&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1400px; margin-left: 2301px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;(&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2320&#34; y=&#34;1418&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;(&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2299.5&#34; y=&#34;1480&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1520px; margin-left: 2301px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;(&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2320&#34; y=&#34;1538&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;(&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2299.5&#34; y=&#34;1600&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1640px; margin-left: 2301px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;(&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2320&#34; y=&#34;1658&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;(&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2439.5&#34; y=&#34;1370&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1410px; margin-left: 2441px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&lt;font style=&#34;font-size: 40px&#34;&gt;,&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2460&#34; y=&#34;1428&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;,&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2439.5&#34; y=&#34;1480&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1520px; margin-left: 2441px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&lt;font style=&#34;font-size: 40px&#34;&gt;,&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2460&#34; y=&#34;1538&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;,&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2439.5&#34; y=&#34;1600&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1640px; margin-left: 2441px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&lt;font style=&#34;font-size: 40px&#34;&gt;,&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2460&#34; y=&#34;1658&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;,&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2569.5&#34; y=&#34;1360&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1400px; margin-left: 2571px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;)&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2590&#34; y=&#34;1418&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;)&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2569.5&#34; y=&#34;1480&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1520px; margin-left: 2571px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;)&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2590&#34; y=&#34;1538&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;)&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2569.5&#34; y=&#34;1600&#34; width=&#34;40&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1640px; margin-left: 2571px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;)&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2590&#34; y=&#34;1658&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;)&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 1161 510 L 1161 803.63&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 1161 808.88 L 1157.5 801.88 L 1161 803.63 L 1164.5 801.88 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;1161&#34; y=&#34;615&#34; width=&#34;110&#34; height=&#34;50&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 108px; height: 1px; padding-top: 640px; margin-left: 1162px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;zip/&lt;br /&gt;combine&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;1216&#34; y=&#34;646&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;zip/&amp;hellip;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;image x=&#34;1280.5&#34; y=&#34;554.5&#34; width=&#34;148.5&#34; height=&#34;192.98&#34; xlink:href=&#34;https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQyH7f3uDMHUtxVLR5IHjfPg1zBNVQG1Aa1d0Cmp2Cq93ZhOim7&amp;amp;usqp=CAU&#34; preserveAspectRatio=&#34;none&#34; transform=&#34;rotate(-180,1355.25,651.49)&#34;/&gt;&lt;path d=&#34;M 2639.5 1350 L 2639.5 1643.63&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 2639.5 1648.88 L 2636 1641.88 L 2639.5 1643.63 L 2643 1641.88 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;2639.5&#34; y=&#34;1455&#34; width=&#34;110&#34; height=&#34;50&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 108px; height: 1px; padding-top: 1480px; margin-left: 2641px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;zip/&lt;br /&gt;combine&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2695&#34; y=&#34;1486&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;zip/&amp;hellip;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;image x=&#34;2809&#34; y=&#34;1394.5&#34; width=&#34;148.5&#34; height=&#34;192.98&#34; xlink:href=&#34;https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQyH7f3uDMHUtxVLR5IHjfPg1zBNVQG1Aa1d0Cmp2Cq93ZhOim7&amp;amp;usqp=CAU&#34; preserveAspectRatio=&#34;none&#34; transform=&#34;rotate(-180,2883.75,1491.49)&#34;/&gt;&lt;rect x=&#34;2299.5&#34; y=&#34;1790&#34; width=&#34;80&#34; height=&#34;240&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;2299.5&#34; y=&#34;1870&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1910px; margin-left: 2301px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;2&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2340&#34; y=&#34;1916&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;2&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2299.5&#34; y=&#34;1950&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1990px; margin-left: 2301px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;3&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2340&#34; y=&#34;1996&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;3&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2299.5&#34; y=&#34;1790&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#fff2cc&#34; stroke=&#34;#d6b656&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1830px; margin-left: 2301px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;1&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2340&#34; y=&#34;1836&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;1&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2559.5&#34; y=&#34;1790&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1830px; margin-left: 2561px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&#39;A&#39;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2600&#34; y=&#34;1836&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;&#39;A&#39;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2559.5&#34; y=&#34;1870&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1910px; margin-left: 2561px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&#39;B&#39;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2600&#34; y=&#34;1916&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;&#39;B&#39;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;2559.5&#34; y=&#34;1950&#34; width=&#34;80&#34; height=&#34;80&#34; fill=&#34;#dae8fc&#34; stroke=&#34;#6c8ebf&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 1990px; margin-left: 2561px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 20px; font-family: Courier New; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;&#39;C&#39;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;2600&#34; y=&#34;1996&#34; fill=&#34;#000000&#34; font-family=&#34;Courier New&#34; font-size=&#34;20px&#34; text-anchor=&#34;middle&#34;&gt;&#39;C&#39;&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d=&#34;M 2399.5 1690 L 2343.03 1774.7&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 2340.12 1779.07 L 2341.09 1771.3 L 2343.03 1774.7 L 2346.92 1775.19 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;path d=&#34;M 2519.5 1690 L 2595.27 1775.24&#34; fill=&#34;none&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;stroke&#34;/&gt;&lt;path d=&#34;M 2598.76 1779.16 L 2591.49 1776.26 L 2595.27 1775.24 L 2596.72 1771.61 Z&#34; fill=&#34;#000000&#34; stroke=&#34;#000000&#34; stroke-miterlimit=&#34;10&#34; pointer-events=&#34;all&#34;/&gt;&lt;rect x=&#34;1&#34; y=&#34;440&#34; width=&#34;120&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 480px; margin-left: 2px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;zip&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;61&#34; y=&#34;498&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;zip&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x=&#34;1581&#34; y=&#34;860&#34; width=&#34;180&#34; height=&#34;80&#34; fill=&#34;none&#34; stroke=&#34;none&#34; pointer-events=&#34;all&#34;/&gt;&lt;g transform=&#34;translate(-0.5 -0.5)&#34;&gt;&lt;switch&gt;&lt;foreignObject style=&#34;overflow: visible; text-align: left;&#34; pointer-events=&#34;none&#34; width=&#34;100%&#34; height=&#34;100%&#34; requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;&gt;&lt;div xmlns=&#34;http://www.w3.org/1999/xhtml&#34; style=&#34;display: flex; align-items: unsafe center; justify-content: unsafe center; width: 178px; height: 1px; padding-top: 900px; margin-left: 1582px;&#34;&gt;&lt;div style=&#34;box-sizing: border-box; font-size: 0; text-align: center; &#34;&gt;&lt;div style=&#34;display: inline-block; font-size: 60px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; &#34;&gt;unzip&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x=&#34;1671&#34; y=&#34;918&#34; fill=&#34;#000000&#34; font-family=&#34;Helvetica&#34; font-size=&#34;60px&#34; text-anchor=&#34;middle&#34;&gt;unzip&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;/g&gt;&lt;switch&gt;&lt;g requiredFeatures=&#34;http://www.w3.org/TR/SVG11/feature#Extensibility&#34;/&gt;&lt;a transform=&#34;translate(0,-5)&#34; xlink:href=&#34;https://desk.draw.io/support/solutions/articles/16000042487&#34; target=&#34;_blank&#34;&gt;&lt;text text-anchor=&#34;middle&#34; font-size=&#34;10px&#34; x=&#34;50%&#34; y=&#34;100%&#34;&gt;Viewer does not support full SVG 1.1&lt;/text&gt;&lt;/a&gt;&lt;/switch&gt;&lt;/svg&gt;&lt;/p&gt;
&lt;h3 id=&#34;sorting-in-parallel&#34;&gt;Sorting in parallel&lt;/h3&gt;
&lt;p&gt;Combine two lists and sort them at the same time.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;numbers = [2, 4, 3, 1]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;letters = [&#39;b&#39;, &#39;a&#39;, &#39;d&#39;, &#39;c&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;data1 = list(zip(numbers, letters))
data1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[(2, &#39;b&#39;), (4, &#39;a&#39;), (3, &#39;d&#39;), (1, &#39;c&#39;)]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;data1.sort() # sort by numbers
data1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[(1, &#39;c&#39;), (2, &#39;b&#39;), (3, &#39;d&#39;), (4, &#39;a&#39;)]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;data2 = list(zip(letters, numbers))
data2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[(&#39;b&#39;, 2), (&#39;a&#39;, 4), (&#39;d&#39;, 3), (&#39;c&#39;, 1)]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;data2.sort() # sort by letters
data2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[(&#39;a&#39;, 4), (&#39;b&#39;, 2), (&#39;c&#39;, 1), (&#39;d&#39;, 3)]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use &lt;code&gt;sorted()&lt;/code&gt; and &lt;code&gt;zip()&lt;/code&gt; together to achieve a similar result&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;data = sorted(zip(letters, numbers))
data
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[(&#39;a&#39;, 4), (&#39;b&#39;, 2), (&#39;c&#39;, 1), (&#39;d&#39;, 3)]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;calculating-in-pairs&#34;&gt;Calculating in pairs&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;total_sales = [52000.00, 51000.00, 48000.00]
prod_cost = [46800.00, 45900.00, 43200.00]

for sales, costs in zip(total_sales, prod_cost):
    profit = sales - costs
    print(f&#39;Profit: {profit}&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Profit: 5200.0
Profit: 5100.0
Profit: 4800.0
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;building-dictionaries&#34;&gt;Building Dictionaries&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fields = [&#39;name&#39;, &#39;last_name&#39;, &#39;age&#39;, &#39;job&#39;]
values = [&#39;John&#39;, &#39;Doe&#39;, &#39;45&#39;, &#39;Python Developer&#39;]

a_dict = dict(zip(fields, values))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;a_dict
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;{&#39;name&#39;: &#39;John&#39;, &#39;last_name&#39;: &#39;Doe&#39;, &#39;age&#39;: &#39;45&#39;, &#39;job&#39;: &#39;Python Developer&#39;}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Update an existing dictionary by combining &lt;code&gt;zip()&lt;/code&gt; with &lt;code&gt;dict.update()&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;new_job = [&#39;Python Consultant&#39;]
field = [&#39;job&#39;]

a_dict.update(zip(field, new_job))
a_dict
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;{&#39;name&#39;: &#39;John&#39;, &#39;last_name&#39;: &#39;Doe&#39;, &#39;age&#39;: &#39;45&#39;, &#39;job&#39;: &#39;Python Consultant&#39;}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
